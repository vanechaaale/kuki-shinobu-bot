"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * @en ObjectKeysManager
 */
class ObjectKeysManager {
    /**
     * @param cachedAssetsManager
     */
    constructor(cachedAssetsManager) {
        var _a, _b, _c, _d, _e;
        const waterAetherSkillDepot = (_a = cachedAssetsManager.getGenshinCacheData("AvatarSkillDepotExcelConfigData").findArray((_, p) => p.getAsNumber("id") === 503)) === null || _a === void 0 ? void 0 : _a[1];
        this.characterArkheKey = (_b = waterAetherSkillDepot.findObject((_, p) => p.getValue() === "Ousia")) === null || _b === void 0 ? void 0 : _b[0];
        const aetherProfilePicture = (_c = cachedAssetsManager.getGenshinCacheData("ProfilePictureExcelConfigData").findArray((_, p) => p.getAsNumber("id") === 1)) === null || _c === void 0 ? void 0 : _c[1];
        this.profilePictureTypeKey = (_d = aetherProfilePicture.findObject((_, p) => p.getValue() === "PROFILE_PICTURE_UNLOCK_BY_AVATAR")) === null || _d === void 0 ? void 0 : _d[0];
        this.profilePictureReferenceIdKey = (_e = aetherProfilePicture.findObject((_, p) => p.getValue() === 10000005)) === null || _e === void 0 ? void 0 : _e[0];
        const invalidKeys = Object.entries(this).filter(entry => entry[1] === undefined).map(entry => entry[0]);
        if (invalidKeys.length > 0)
            throw new Error(`Invalid keys detected: ${invalidKeys.join(", ")}`);
    }
}
exports.default = ObjectKeysManager;
