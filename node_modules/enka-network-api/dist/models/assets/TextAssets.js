"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const AssetsNotFoundError_1 = __importDefault(require("../../errors/AssetsNotFoundError"));
/**
 * @en TextAssets
 */
class TextAssets {
    /**
     * @param id
     * @param enka
     * @param convertToHtmlFormat
     * @param directory
     */
    constructor(id, enka, convertToHtmlFormat = false, directory) {
        this.id = id;
        this.enka = enka;
        this.convertToHtmlFormat = convertToHtmlFormat;
        this.directory = directory !== null && directory !== void 0 ? directory : null;
    }
    /**
     * @param lang
     * @throws {AssetsNotFoundError}
     */
    get(lang) {
        var _a;
        lang !== null && lang !== void 0 ? lang : (lang = this.enka.options.defaultLanguage);
        let text = this.enka.cachedAssetsManager.getLanguageData(lang, (_a = this.directory) !== null && _a !== void 0 ? _a : undefined)[this.id];
        if (!text)
            throw new AssetsNotFoundError_1.default("Text Assets", this.id);
        if (this.convertToHtmlFormat) {
            text = text
                .replace(/<color=([^>]+)>/g, "<span style=\"color:$1\">")
                .replace(/<\/color>/g, "</span>")
                .replace(/\r\n|\n|\\n|\r/gm, "<br>");
        }
        return text;
    }
    /**
     * @param lang
     * @returns null instead of throwing AssetsNotFoundError.
     */
    getNullable(lang) {
        try {
            return this.get(lang);
        }
        catch (e) {
            return null;
        }
    }
    /**
     * @param convertToHtmlFormat
     */
    setConvertToHtmlFormat(convertToHtmlFormat) {
        this.convertToHtmlFormat = convertToHtmlFormat;
        return this;
    }
    /**  */
    toString() {
        var _a;
        return (_a = this.getNullable()) !== null && _a !== void 0 ? _a : `Unknown TextAssets(${this.id})`;
    }
}
exports.default = TextAssets;
