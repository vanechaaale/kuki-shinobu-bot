"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const config_file_js_1 = require("config_file.js");
const enka_system_1 = require("enka-system");
const Costume_1 = __importDefault(require("./character/Costume"));
const Material_1 = __importDefault(require("./material/Material"));
const ProfilePicture_1 = __importDefault(require("./ProfilePicture"));
/**
 * @en GenshinUser
 */
class GenshinUser extends enka_system_1.User {
    /**
     * @param data
     * @param enka
    */
    constructor(data, enka) {
        const json = new config_file_js_1.JsonReader(data);
        super(json);
        this.enka = enka;
        if (!enka.cachedAssetsManager.hasAllContents())
            throw new Error("Complete Genshin data cache not found.\nYou need to fetch Genshin data by EnkaClient#cachedAssetsManager#fetchAllContents.");
        this.uid = Number(json.getValue("uid"));
        const playerInfo = json.get("playerInfo");
        this.nickname = playerInfo.getAsStringWithDefault(null, "nickname");
        this.signature = playerInfo.getAsStringWithDefault(null, "signature");
        const profilePic = playerInfo.get("profilePicture");
        this.profilePicture = profilePic.has("id") ? ProfilePicture_1.default.getById(profilePic.getAsNumber("id"), enka)
            : profilePic.has("avatarId") ? ProfilePicture_1.default.getByOldFormat(profilePic.getAsNumber("avatarId"), profilePic.getAsNumberWithDefault(null, "costumeId"), enka)
                : null;
        this.charactersPreview = playerInfo.has("showAvatarInfoList") ? playerInfo.get("showAvatarInfoList").mapArray((_, p) => {
            const costumeId = p.getAsNumberWithDefault(null, "costumeId");
            const costume = costumeId === null ? Costume_1.default.getDefaultCostumeByCharacterId(p.getAsNumber("avatarId"), enka) : Costume_1.default.getById(costumeId, enka);
            const preview = {
                costume: costume,
                level: p.getAsNumber("level"),
            };
            return preview;
        }) : [];
        this.nameCards = playerInfo.has("showNameCardIdList") ? playerInfo.get("showNameCardIdList").mapArray((_, id) => Material_1.default.getMaterialById(id.getAsNumber(), enka)) : [];
        this.level = playerInfo.getAsNumber("level");
        this.worldLevel = playerInfo.getAsNumberWithDefault(0, "worldLevel");
        this.profileCard = Material_1.default.getMaterialById(playerInfo.getAsNumber("nameCardId"), enka);
        this.achievements = playerInfo.getAsNumberWithDefault(0, "finishAchievementNum");
        this.spiralAbyss = playerInfo.has("towerFloorIndex") && playerInfo.has("towerLevelIndex") ? { floor: playerInfo.getAsNumber("towerFloorIndex"), chamber: playerInfo.getAsNumber("towerLevelIndex") } : null;
        this.ttl = json.getAsNumberWithDefault(-1, "ttl");
        this.enkaProfile = json.has("owner") ? new enka_system_1.EnkaProfile(enka.options.enkaSystem, json.getAsJsonObject("owner")) : null;
        this.enkaGameAccountHash = json.getAsStringWithDefault(null, "owner", "hash");
        this.url = `${enka.options.enkaUrl}/u/${this.uid}/`;
    }
}
exports.default = GenshinUser;
