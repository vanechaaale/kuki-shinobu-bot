"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const config_file_js_1 = require("config_file.js");
const AssetsNotFoundError_1 = __importDefault(require("../errors/AssetsNotFoundError"));
const TextAssets_1 = __importDefault(require("./assets/TextAssets"));
/**
 * @en Element
 */
class Element {
    /**
     * @param data
     * @param enka
     */
    constructor(data, enka) {
        this._data = data;
        this.enka = enka;
        const json = new config_file_js_1.JsonReader(this._data);
        this.id = json.getAsString("textMapId");
        this.name = new TextAssets_1.default(json.getAsNumber("textMapContentTextMapHash"), enka);
    }
    static getByElementType(elementType, enka) {
        var _a;
        const json = (_a = enka.cachedAssetsManager.getGenshinCacheData("ManualTextMapConfigData").findArray((_, p) => p.getAsString("textMapId") === elementType)) === null || _a === void 0 ? void 0 : _a[1];
        if (!json)
            throw new AssetsNotFoundError_1.default("Element", elementType);
        return new Element(json.getAsJsonObject(), enka);
    }
}
exports.default = Element;
