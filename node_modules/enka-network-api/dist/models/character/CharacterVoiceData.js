"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const config_file_js_1 = require("config_file.js");
const TextAssets_1 = __importDefault(require("../assets/TextAssets"));
const AssetsNotFoundError_1 = __importDefault(require("../../errors/AssetsNotFoundError"));
const DynamicTextAssets_1 = __importDefault(require("../assets/DynamicTextAssets"));
/**
 * @en CharacterVoiceData
 */
class CharacterVoiceData {
    /**
     * @param data
     * @param enka
     */
    constructor(data, enka) {
        this._data = data;
        this.enka = enka;
        const json = new config_file_js_1.JsonReader(this._data);
        this.title = new TextAssets_1.default(json.getAsNumber("voiceTitleTextMapHash"), this.enka, false, "voice_text");
        this.textContent = new DynamicTextAssets_1.default(json.getAsNumber("voiceFileTextTextMapHash"), {}, this.enka, false, "voice_text");
    }
    static getById(id, enka) {
        var _a;
        const json = (_a = enka.cachedAssetsManager.getGenshinCacheData("FettersExcelConfigData").findArray((_, voice) => voice.getAsNumber("fetterId") == id)) === null || _a === void 0 ? void 0 : _a[1];
        if (!json)
            throw new AssetsNotFoundError_1.default("CharacterVoiceData", id);
        return new CharacterVoiceData(json.getAsJsonObject(), enka);
    }
}
exports.default = CharacterVoiceData;
