export type JsonElement = number | boolean | string | JsonObject | JsonArray | null;
type _JsonObject<T extends JsonElement> = {
    [s: string]: T;
};
type _JsonArray<T extends JsonElement> = T[];
export interface JsonObject<T extends JsonElement = JsonElement> extends _JsonObject<T> {
}
export interface JsonArray<T extends JsonElement = JsonElement> extends _JsonArray<T> {
}
export declare function isJsonElement(value: unknown): value is JsonElement;
export declare function isJsonObject(value: unknown): value is JsonObject;
export declare function isJsonArray(value: unknown): value is JsonArray;
export {};
